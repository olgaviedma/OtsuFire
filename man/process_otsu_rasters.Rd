% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2.process_otsu_rasters_corine_ecoregions.R
\name{process_otsu_rasters}
\alias{process_otsu_rasters}
\title{Process Burned Area Rasters Using Otsu Thresholding or Percentile Clipping}
\arguments{
\item{folder_path}{Path to a directory or a single-band RBR or dNBR raster (required if `nbr_pre_path`/`nbr_post_path` are not used).}

\item{raster_path}{Path to a single-band raster file (optional alternative to `folder_path`).}

\item{nbr_pre_path}{Path to pre-fire NBR raster. Required if computing RBR/dNBR.}

\item{nbr_post_path}{Path to post-fire NBR raster. Required if computing RBR/dNBR.}

\item{output_dir}{Directory to save output rasters, shapefiles, plots, and logs.}

\item{year}{Integer or character. Year label used for naming output files. If NULL, defaults to folder name.}

\item{otsu_thresholds}{Numeric vector of lower bounds to pre-filter index values before applying Otsu (e.g., `c(0, 50, 100)`).}

\item{trim_percentiles}{Optional `data.frame` with columns `min` and `max` (e.g., 0.01 to 0.99) to clip index values before applying Otsu.}

\item{use_original}{Logical. If `TRUE`, uses all values from the raster without filtering (except NA). Ignored if `trim_percentiles` is set.}

\item{corine_raster_path}{Optional path to CORINE land cover raster for stratified segmentation.}

\item{ecoregion_shapefile_path}{Optional path to WWF ecoregions shapefile (must include column `EnS_name`).}

\item{min_otsu_threshold_value}{Numeric. Minimum acceptable threshold value. If Otsu yields a lower threshold, this value is used instead. Default: 100.}

\item{python_exe}{Path to the Python executable (used to call GDAL).}

\item{gdal_polygonize_script}{Path to `gdal_polygonize.py` script.}

\item{n_rows, n_cols}{Number of rows and columns for tiling the raster if `tile = TRUE`.}

\item{tile_overlap}{Size of buffer (in map units) around each tile to ensure seamless polygonization.}

\item{tile}{Logical. If `TRUE`, raster is split into tiles before polygonization.}

\item{index_type}{Character. One of `"RBR"` or `"dNBR"` if computing the index from pre/post NBR rasters.}
}
\value{
A named list of `sf` polygons for each segmentation. Additionally, a shapefile and log are saved to `output_dir`.
}
\description{
This function computes binary burned area masks from a severity index raster (RBR or dNBR)
using either Otsu's thresholding or percentile-based clipping. The segmentation can be applied
to the full raster or stratified by CORINE land cover classes (raster) or WWF ecoregions (shapefile).

## Key features:
- Supports Otsu thresholding after filtering by minimum index values (`otsu_thresholds`)
  or after percentile-based clipping (`trim_percentiles`)
- Allows applying a minimum threshold (`min_otsu_threshold_value`) if Otsu yields low values
- Can stratify processing by CORINE land cover (`corine_raster_path`) or ecoregions (`ecoregion_shapefile_path`)
- Optionally tiles the raster and polygonizes each tile using GDAL (`gdal_polygonize.py`)

For each segmentation, the function generates:
- A binary burned area raster (1 = burned, NA = unburned)
- A polygon shapefile of burned patches
- A histogram + inter-class variance plot
- A log file with actual thresholds used
}
\details{
When stratifying by CORINE or ecoregion classes, a single combined shapefile is created for each threshold,
and intermediate shapefiles per class are removed. The function ensures geometry validity and avoids duplicate polygons.

If both `trim_percentiles` and `otsu_thresholds` are provided, the function raises an error-only one method can be used.

The function internally rescales raster values to [0, 255] before applying Otsu, and plots the histogram
along with the inter-class variance curve and the selected threshold.
}
\examples{
\dontrun{
# Example 1: Basic Otsu thresholds
process_otsu_rasters(
  folder_path = "data/rbr_1985.tif",
  output_dir = "output/1985",
  otsu_thresholds = c(0, 50, 100),
  python_exe = "C:/Python/python.exe",
  gdal_polygonize_script = "C:/Python/Scripts/gdal_polygonize.py"
)

# Example 2: Percentile clipping (global)
process_otsu_rasters(
  folder_path = "data/rbr_1985.tif",
  output_dir = "output/1985",
  trim_percentiles = data.frame(min = 0.01, max = 0.99),
  python_exe = "C:/Python/python.exe",
  gdal_polygonize_script = "C:/Python/Scripts/gdal_polygonize.py"
)

# Example 3: Stratified by CORINE with min threshold enforcement
process_otsu_rasters(
  folder_path = "data/rbr_1985.tif",
  output_dir = "output/1985",
  corine_raster_path = "data/corine.tif",
  otsu_thresholds = c(0, 50, 100),
  min_otsu_threshold_value = 150,
  python_exe = "C:/Python/python.exe",
  gdal_polygonize_script = "C:/Python/Scripts/gdal_polygonize.py"
)

# Example 4: Stratified by WWF ecoregions
process_otsu_rasters(
  folder_path = "data/rbr_1985.tif",
  output_dir = "output/1985",
  ecoregion_shapefile_path = "data/ecoregions_olson.shp",
  otsu_thresholds = c(0, 50, 100),
  min_otsu_threshold_value = 150,
  python_exe = "C:/Python/python.exe",
  gdal_polygonize_script = "C:/Python/Scripts/gdal_polygonize.py"
)
}

\dontshow{if (requireNamespace("OtsuSeg", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
\dontshow{\}) # examplesIf}
}
