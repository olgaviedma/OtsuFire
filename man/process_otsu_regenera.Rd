% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/4.process_otsu_regenera.R
\name{process_otsu_regenera}
\alias{process_otsu_regenera}
\title{Detect Post-Fire Regeneration Using Otsu and Percentile-Based Clipping}
\arguments{
\item{rbr_post}{Path to post-fire RBR or dNBR raster. Alternatively, provide `nbr_pre_path` and `nbr_post_path`.
If a named list is provided, names should match the format `"P1"`, `"P2"`, etc.}

\item{nbr_pre_path}{Path to pre-fire NBR raster (for index computation).}

\item{nbr_post_path}{Path to post-fire NBR raster (for index computation).}

\item{rbr_date}{Optional path to an RBR raster used to mask previously burned areas (RBR < 0).}

\item{output_dir}{Directory where outputs (rasters, shapefiles, plots) will be saved.}

\item{python_exe}{Path to the Python executable (used to call GDAL).}

\item{gdal_polygonize_script}{Path to `gdal_polygonize.py` script.}

\item{n_rows, n_cols}{Number of rows and columns for tiling. Ignored if `tile = FALSE`.}

\item{tile_overlap}{Overlap size (in meters) between tiles. Used for seamless polygonization.}

\item{tile}{Logical. If `TRUE`, raster is tiled before polygonization.}

\item{index_type}{Index type to compute: either `"RBR"` or `"dNBR"`. Ignored if `rbr_post` is provided.}

\item{trim_percentiles}{Data frame with columns `min` and `max`, defining percentile ranges
to clip negative RBR values before thresholding (only used if `use_fixed_threshold = FALSE`).}

\item{bind_all}{Logical. If `TRUE`, all shapefiles from each threshold are merged into one combined shapefile.}

\item{regen_year}{Integer vector specifying the number of years after the fire to consider for regeneration (e.g., `c(2)`).}

\item{fire_year}{Integer indicating the fire year. Used for output naming and labeling.}

\item{use_fixed_threshold}{Logical. If `TRUE`, applies a fixed threshold instead of Otsu.}

\item{fixed_threshold_value}{Numeric threshold to use when `use_fixed_threshold = TRUE`. Default is `-150`.}
}
\value{
A named list with entries for each regeneration year (`"P1"`, `"P2"`, etc.), each containing:
\describe{
  \item{raster}{Path to binary raster with detected regeneration.}
  \item{shapefile}{Path to polygonized shapefile of regeneration areas.}
  \item{combined}{(if `bind_all = TRUE`) Path to the merged shapefile.}
}
}
\description{
This function detects vegetation regeneration signals using negative RBR or dNBR values.
It applies percentile-based clipping to the raster, rescales values, and uses a smoothed
Otsu threshold to extract regeneration areas. Optionally, the raster can be tiled before
polygonization using GDAL. All outputs are saved as binary rasters and shapefiles.

You can also mask out previously burned areas by providing a historical RBR raster
(`rbr_date`). If `bind_all = TRUE`, the function merges all resulting shapefiles
across thresholds into one dissolved shapefile with unique polygon IDs.

If `use_fixed_threshold = TRUE`, a fixed threshold is applied instead of calculating it from Otsu.
}
\examples{
\dontrun{
# Regeneration detection using precomputed RBR and masking out prior burns

process_otsu_regenera(
  rbr_post = "data/RBR_1986.tif",
  rbr_date = "data/RBR_1985.tif",
  output_dir = "output/regenera",
python_exe,
gdal_polygonize_script,
n_rows = 2,
n_cols = 3,
tile_overlap = 1000,
tile = TRUE,
index_type = "RBR",
trim_percentiles = NULL, #data.frame(min = c(0.01, 0.005), max = c(0.99, 0.995)),
bind_all = FALSE,
regen_year = c(2),
fire_year = NULL,
use_fixed_threshold = FALSE,
fixed_threshold_value = -100
)
}

}
